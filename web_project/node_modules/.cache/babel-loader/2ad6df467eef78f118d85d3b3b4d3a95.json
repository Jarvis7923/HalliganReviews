{"ast":null,"code":"var _jsxFileName = \"/Users/jingkaisu/Documents/HRfront/HalliganReviews/web_project/src/components/pages/course-review/body/evaluations/plots/SingleStackBarPlot.jsx\";\nimport React from \"react\";\nimport \"./SingleStackBarPlot.css\";\nimport Plotly from \"plotly.js\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nconst Plot = createPlotlyComponent(Plotly);\n\nfunction SingleStackBarPlot(props) {\n  function setData(x, color) {\n    return {\n      x: [x],\n      yaxis: \"y\",\n      type: \"bar\",\n      barmode: \"stack\",\n      texttemplate: x > 0.05 ? \"%{x:%}\" : \"\",\n      textposition: \"auto\",\n      hoverinfo: \"none\",\n      orientation: \"h\",\n      marker: {\n        color: color\n      }\n    };\n  }\n\n  function getData() {\n    let data = [];\n\n    for (var i = 0; i < props.dist.length; i++) {\n      data.push(setData(props.dist[i], props.colorScheme[i]));\n    }\n\n    return data;\n  }\n\n  const layout = {\n    barmode: \"stack\",\n    xaxis: {\n      tickformat: \"%\",\n      showgrid: false,\n      zeroline: false,\n      fixedrange: true,\n      showticklabels: false\n    },\n    yaxis: {\n      automargin: true,\n      fixedrange: true,\n      showticklabels: false\n    },\n    width: props.width,\n    height: props.height,\n    margin: {\n      l: 0,\n      r: 1,\n      b: 1,\n      t: 1,\n      pad: 0\n    },\n    showlegend: false,\n    static: true\n  };\n  const display = {\n    displayModeBar: false,\n    staticPlot: true\n  };\n  const traces = getData();\n  return /*#__PURE__*/React.createElement(Plot, {\n    data: traces,\n    layout: layout,\n    config: display,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  });\n}\n\nexport default SingleStackBarPlot;","map":{"version":3,"sources":["/Users/jingkaisu/Documents/HRfront/HalliganReviews/web_project/src/components/pages/course-review/body/evaluations/plots/SingleStackBarPlot.jsx"],"names":["React","Plotly","createPlotlyComponent","Plot","SingleStackBarPlot","props","setData","x","color","yaxis","type","barmode","texttemplate","textposition","hoverinfo","orientation","marker","getData","data","i","dist","length","push","colorScheme","layout","xaxis","tickformat","showgrid","zeroline","fixedrange","showticklabels","automargin","width","height","margin","l","r","b","t","pad","showlegend","static","display","displayModeBar","staticPlot","traces"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,0BAAP;AAGA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,MAAMC,IAAI,GAAGD,qBAAqB,CAACD,MAAD,CAAlC;;AAEA,SAASG,kBAAT,CAA4BC,KAA5B,EAAmC;AAEjC,WAASC,OAAT,CAAiBC,CAAjB,EAAoBC,KAApB,EAA2B;AACzB,WAAO;AACLD,MAAAA,CAAC,EAAE,CAACA,CAAD,CADE;AAELE,MAAAA,KAAK,EAAE,GAFF;AAGLC,MAAAA,IAAI,EAAE,KAHD;AAILC,MAAAA,OAAO,EAAE,OAJJ;AAKLC,MAAAA,YAAY,EAAGL,CAAC,GAAG,IAAL,GAAW,QAAX,GAAoB,EAL7B;AAMLM,MAAAA,YAAY,EAAE,MANT;AAOLC,MAAAA,SAAS,EAAE,MAPN;AAQLC,MAAAA,WAAW,EAAE,GARR;AASLC,MAAAA,MAAM,EAAE;AAAER,QAAAA,KAAK,EAAEA;AAAT;AATH,KAAP;AAWD;;AAED,WAASS,OAAT,GAAmB;AACjB,QAAIC,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,KAAK,CAACe,IAAN,CAAWC,MAA/B,EAAuCF,CAAC,EAAxC,EAA4C;AAC1CD,MAAAA,IAAI,CAACI,IAAL,CACEhB,OAAO,CAACD,KAAK,CAACe,IAAN,CAAWD,CAAX,CAAD,EAAgBd,KAAK,CAACkB,WAAN,CAAkBJ,CAAlB,CAAhB,CADT;AAGD;;AACD,WAAOD,IAAP;AACD;;AAED,QAAMM,MAAM,GAAG;AACbb,IAAAA,OAAO,EAAE,OADI;AAEbc,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE,GADP;AAELC,MAAAA,QAAQ,EAAE,KAFL;AAGLC,MAAAA,QAAQ,EAAE,KAHL;AAILC,MAAAA,UAAU,EAAE,IAJP;AAKLC,MAAAA,cAAc,EAAE;AALX,KAFM;AASbrB,IAAAA,KAAK,EAAE;AACLsB,MAAAA,UAAU,EAAE,IADP;AAELF,MAAAA,UAAU,EAAE,IAFP;AAGLC,MAAAA,cAAc,EAAE;AAHX,KATM;AAcbE,IAAAA,KAAK,EAAE3B,KAAK,CAAC2B,KAdA;AAebC,IAAAA,MAAM,EAAE5B,KAAK,CAAC4B,MAfD;AAgBbC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAX;AAAcC,MAAAA,CAAC,EAAE,CAAjB;AAAoBC,MAAAA,CAAC,EAAE,CAAvB;AAA0BC,MAAAA,GAAG,EAAE;AAA/B,KAhBK;AAiBbC,IAAAA,UAAU,EAAE,KAjBC;AAkBbC,IAAAA,MAAM,EAAE;AAlBK,GAAf;AAqBA,QAAMC,OAAO,GAAG;AACdC,IAAAA,cAAc,EAAE,KADF;AAEdC,IAAAA,UAAU,EAAE;AAFE,GAAhB;AAKA,QAAMC,MAAM,GAAG5B,OAAO,EAAtB;AAEA,sBAAQ,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE4B,MAAZ;AAAoB,IAAA,MAAM,EAAErB,MAA5B;AAAoC,IAAA,MAAM,EAAEkB,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AACD;;AAED,eAAetC,kBAAf","sourcesContent":["import React from \"react\";\n\nimport \"./SingleStackBarPlot.css\";\n\n\nimport Plotly from \"plotly.js\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nconst Plot = createPlotlyComponent(Plotly);\n\nfunction SingleStackBarPlot(props) {\n  \n  function setData(x, color) {\n    return {\n      x: [x],\n      yaxis: \"y\",\n      type: \"bar\",\n      barmode: \"stack\",\n      texttemplate: (x > 0.05)?\"%{x:%}\":\"\",\n      textposition: \"auto\",\n      hoverinfo: \"none\",\n      orientation: \"h\",\n      marker: { color: color },\n    };\n  }\n\n  function getData() {\n    let data = [];\n    for (var i = 0; i < props.dist.length; i++) {\n      data.push(\n        setData(props.dist[i], props.colorScheme[i] )\n      );\n    }\n    return data;\n  }\n\n  const layout = {\n    barmode: \"stack\",\n    xaxis: {\n      tickformat: \"%\",\n      showgrid: false,\n      zeroline: false,\n      fixedrange: true,\n      showticklabels: false,\n    },\n    yaxis: {\n      automargin: true,\n      fixedrange: true,\n      showticklabels: false,\n    },\n    width: props.width,\n    height: props.height,\n    margin: { l: 0, r: 1, b: 1, t: 1, pad: 0 },\n    showlegend: false,\n    static: true,\n  };\n\n  const display = {\n    displayModeBar: false,\n    staticPlot: true\n  };\n\n  const traces = getData();\n\n  return (<Plot data={traces} layout={layout} config={display} />);\n}\n\nexport default SingleStackBarPlot;\n"]},"metadata":{},"sourceType":"module"}