{"ast":null,"code":"var _jsxFileName = \"/Users/jingkaisu/Documents/HRfront/HalliganReviews/web_project/src/components/pages/course-review/body/evaluations/items/RevContent.jsx\";\nimport React from \"react\";\nimport { Accordion, Row, Col } from \"react-bootstrap\";\nimport DetailButton from \"./DetailButton\";\nimport DetailContent from \"./DetailContent\";\nimport SingleStackBarPlot from \"../plots/SingleStackBarPlot\";\nimport \"./RevContent.css\";\n\nfunction Content(props) {\n  // const [plotSize, setPlotSize] = React.useState({height: 0, width: 0})\n  // const ref = React.useRef(null)\n  // React.useEffect(() => {\n  //   setPlotSize({height: ref.current.clientHeight, width: ref.current.clientWidth})\n  // }, [plotSize.width]);\n  const {\n    name,\n    description,\n    distribution,\n    // average,\n    details\n  } = props.data; // const {\n  //   name,\n  //   description, \n  //   data: { undergraduate, graduate, other },\n  // } = props.data;\n  // const generalDist = [];\n  // for (let index = 0; index < undergraduate.length; index++) {\n  //   generalDist.push(undergraduate[index] + graduate[index] + other[index]);\n  // }\n  // const sumGeneralDist = generalDist.reduce((cur, acc) => {\n  //   return cur + acc;\n  // });\n  // const generalDistPercent = generalDist.map((x) => {\n  //   return x / sumGeneralDist;\n  // });\n\n  const avgScore = distribution.reduce((acc, cur, i) => {\n    return cur * (i + 1) + acc;\n  }).toFixed(1);\n  const [c1, c2, c3, c4] = props.widthList;\n  const [a1, a2, a3, a4] = props.alignList;\n  return /*#__PURE__*/React.createElement(Accordion, {\n    className: \"rev-content-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"rev-content-header\",\n    noGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: a1,\n    sm: c1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"rev-content-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"rev-content-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, description)), /*#__PURE__*/React.createElement(Col, {\n    className: a2 + \" rev-content-avg-score\",\n    sm: c2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, avgScore), /*#__PURE__*/React.createElement(Col, {\n    className: a3 + \" rev-content-plot\",\n    sm: c3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SingleStackBarPlot, {\n    width: 500,\n    height: 40,\n    dist: distribution,\n    colorScheme: props.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    className: a4 + \" rev-content-detail\",\n    sm: c4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DetailButton, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DetailContent, {\n    content: details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Content;","map":{"version":3,"sources":["/Users/jingkaisu/Documents/HRfront/HalliganReviews/web_project/src/components/pages/course-review/body/evaluations/items/RevContent.jsx"],"names":["React","Accordion","Row","Col","DetailButton","DetailContent","SingleStackBarPlot","Content","props","name","description","distribution","details","data","avgScore","reduce","acc","cur","i","toFixed","c1","c2","c3","c4","widthList","a1","a2","a3","a4","alignList","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Accordion, Row, Col } from \"react-bootstrap\";\nimport DetailButton from \"./DetailButton\";\nimport DetailContent from \"./DetailContent\";\nimport SingleStackBarPlot from \"../plots/SingleStackBarPlot\"\n\nimport \"./RevContent.css\";\n\n\nfunction Content(props) {\n  // const [plotSize, setPlotSize] = React.useState({height: 0, width: 0})\n  // const ref = React.useRef(null)\n  \n  // React.useEffect(() => {\n  //   setPlotSize({height: ref.current.clientHeight, width: ref.current.clientWidth})\n  // }, [plotSize.width]);\n  const {\n    name,\n    description, \n    distribution, \n    // average,\n    details\n  } = props.data;\n\n  // const {\n  //   name,\n  //   description, \n  //   data: { undergraduate, graduate, other },\n  // } = props.data;\n\n  // const generalDist = [];\n\n  // for (let index = 0; index < undergraduate.length; index++) {\n  //   generalDist.push(undergraduate[index] + graduate[index] + other[index]);\n  // }\n\n  // const sumGeneralDist = generalDist.reduce((cur, acc) => {\n  //   return cur + acc;\n  // });\n\n  // const generalDistPercent = generalDist.map((x) => {\n  //   return x / sumGeneralDist;\n  // });\n\n  const avgScore = distribution.reduce((acc, cur, i) => {\n    return cur * (i + 1) + acc;\n  }).toFixed(1);\n\n\n  const [c1, c2, c3, c4] = props.widthList;\n  const [a1, a2, a3, a4] = props.alignList;\n\n  return (\n    <Accordion className=\"rev-content-wrap\">\n      <Row  className=\"rev-content-header\" noGutters={true}>\n        <Col className={a1} sm={c1}>\n          <p className=\"rev-content-name\">{name}</p>\n          <p className=\"rev-content-description\">{description}</p>\n        </Col>\n        <Col className={a2 + \" rev-content-avg-score\"} sm={c2}>{avgScore}</Col>\n        <Col className={a3 + \" rev-content-plot\"} sm={c3}>\n            <SingleStackBarPlot width={500} height={40} dist={distribution} colorScheme={props.color}/>\n        </Col>\n        <Col className={a4 + \" rev-content-detail\"} sm={c4}>\n            <DetailButton eventKey='0'/>\n        </Col>\n      </Row>\n      <Accordion.Collapse eventKey='0'>\n        <DetailContent content={details}/>\n      </Accordion.Collapse>\n    </Accordion>\n  );\n}\n\nexport default Content;\n"]},"metadata":{},"sourceType":"module"}